faf_score: 100%
ai_confidence: MAXIMUM
ai_value: 30_seconds_replaces_20_minutes_of_questions
ai_tldr:
  project: Claude Faf Mcp - Universal FAF MCP Server for Claude - AI Context Intelligence & Project Enhancement
  stack: TypeScript/Node.js with File Access
  quality_bar: ZERO_ERRORS_F1_STANDARDS
  current_focus: Production deployment with v2.0.0 file tools
  your_role: Build features with perfect context
instant_context:
  what_building: Universal FAF MCP Server for Claude - AI Context Intelligence & Project Enhancement
  tech_stack: TypeScript/Node.js with File System Access
  main_language: TypeScript
  deployment: NPM Registry / Cloud Platform
  key_files:
    - package.json
    - tsconfig.json
    - src/handlers/fileHandler.ts
    - src/handlers/tools.ts
context_quality:
  slots_filled: 21/21 (100%)
  ai_confidence: MAXIMUM
  handoff_ready: true
  missing_context: []
project:
  name: Claude Faf Mcp
  goal: Universal FAF MCP Server for Claude - AI Context Intelligence & Project Enhancement
  main_language: TypeScript
  faf_version: 2.5.0
  mcp_version: 2.0.0
  generated: 2025-09-15T03:48:00.000Z
  last_enhanced: 2025-09-15T03:48:00.000Z
ai_instructions:
  priority_order:
    - 1. Read THIS .faf file first
    - 2. Check CLAUDE.md for session context
    - 3. Review package.json for dependencies
  working_style:
    code_first: true
    explanations: minimal
    quality_bar: zero_errors
    testing: required
  warnings:
    - Never modify dial components without approval
    - All TypeScript must pass strict mode
    - Test coverage required for new features
    - File operations have 50MB limit
stack:
  frontend: None
  css_framework: None
  ui_library: None
  state_management: None
  backend: Node.js
  runtime: Express.js
  database: File System (JSON/Text)
  storage: Local File System
  build: TypeScript Compiler
  package_manager: npm
  api_type: MCP Protocol / REST API
  hosting: NPM Registry
  cicd: Full CI/CD Pipeline
testing:
  framework: Jest
  coverage_target: 90
  type: unit + integration
  test_runner: ts-jest
deployment:
  platform: npm registry
  ci_cd: GitHub Actions
  publish_scope: public
  registry: https://registry.npmjs.org
features:
  file_operations: true
  faf_tools_count: 11
  security_validation: true
  path_traversal_protection: true
  timeout_protection: 30s
  max_file_size: 50MB
preferences:
  quality_bar: zero_errors
  commit_style: conventional_emoji
  response_style: concise_code_first
  explanation_level: minimal
  communication: direct
  testing: required
  documentation: as_needed
state:
  phase: production
  version: 2.0.0
  focus: file_tools_deployed
  status: green_flag_victory
  next_milestone: npm_publication
  blockers: []
  achievements:
    - Logo deployed (orange smiley)
    - File tools operational
    - 100% context achieved
tags:
  auto_generated:
    - claude-faf-mcp
    - typescript
    - node.js
    - mcp-server
    - file-access
  smart_defaults:
    - .faf
    - ai-ready
    - 2025
    - software
    - open-source
  user_defined:
    - f1-grade
    - zero-errors
    - production-ready
human_context:
  who: Enterprise Developer Team
  what: Platform that provides: AI Context Intelligence with File Access
  why: Improve development efficiency and enable direct file manipulation
  where: Claude Desktop / Web Platform
  when: Version 2.0.0 - Production Ready
  how: Built with TypeScript, Node.js, MCP Protocol
  additional_context: File tools enable read/write operations with security
  context_score: 100
  total_prd_score: 200
  success_rate: 100%
scoring:
  slot_based_percentage: 100
  faf_score: 100
  total_slots: 21
  filled_slots: 21
  scoring_method: Honest percentage - all slots filled
  enhancements_applied:
    - Added database configuration (File System)
    - Added testing framework details
    - Added deployment specifics
    - Added feature flags
    - Updated version to 2.0.0
    - Added achievements section