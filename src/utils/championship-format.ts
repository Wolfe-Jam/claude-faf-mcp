/**
 * FAF Championship Output Formatter
 * The RAILS for proper FAF output! üèéÔ∏è‚ö°
 */

export interface AchievementStatus {
  speed: number;
  score: number;
  files: number;
  isDotFaffed: boolean;
}

export class ChampionshipFormatter {
  /**
   * Format FAF output with Championship wrapper
   * SHOW FIRST - ENHANCE AFTER!
   */
  static formatOutput(rawOutput: string, status?: AchievementStatus): string {
    let formatted = '';

    // ALWAYS RAW FIRST - This is SACRED!
    formatted += '=== FAF CHAMPIONSHIP OUTPUT ===\n';
    formatted += rawOutput;
    formatted += '\n=== END CHAMPIONSHIP OUTPUT ===\n';

    // Achievement Status (OPTIONAL enhancement)
    if (status) {
      formatted += '\n=== YOUR ACHIEVEMENT STATUS ===\n';

      // Speed Achievement
      const speedBadge = status.speed < 10 ? '‚ö°üèÜ' : status.speed < 50 ? '‚ö°' : 'üèéÔ∏è';
      formatted += `üèéÔ∏è Speed: ${status.speed}ms ${speedBadge}\n`;

      // Score Achievement
      const scoreBadge = status.score >= 99 ? 'üçä' : status.score >= 90 ? 'üèÜ' : status.score >= 70 ? '‚≠ê' : 'üìä';
      formatted += `üèÜ Score: ${status.score}/100 ${scoreBadge}\n`;

      // Files Ready
      formatted += `üìä Files: ${status.files} ready\n`;

      // DOT FAFFED Status
      const dotFaffedStatus = status.isDotFaffed
        ? 'üèÜ DOT FAFFED ACHIEVED! üèÜ'
        : `‚ö° Working toward DOT FAFFED (${status.score}/70 needed)`;
      formatted += `‚ö° Status: ${dotFaffedStatus}\n`;

      formatted += '=== END STATUS ===\n';
    }

    return formatted;
  }

  /**
   * Check if user is DOT FAFFED
   */
  static isDotFaffed(score: number): boolean {
    return score >= 70;
  }

  /**
   * Get achievement level based on score
   */
  static getAchievementLevel(score: number): string {
    if (score >= 105) return 'üçä BIG ORANGE CHAMPIONSHIP!';
    if (score >= 99) return 'üèÜ CHAMPIONSHIP MODE!';
    if (score >= 90) return '‚≠ê PODIUM FINISH!';
    if (score >= 70) return '‚úÖ DOT FAFFED!';
    if (score >= 50) return 'üèéÔ∏è ON TRACK!';
    return '‚ö° BUILDING MOMENTUM!';
  }

  /**
   * Get speed achievement
   */
  static getSpeedAchievement(ms: number): string {
    if (ms < 1) return '‚ö°üèÜ INSTANT! WORLD RECORD!';
    if (ms < 10) return '‚ö° SUB-10ms CHAMPIONSHIP!';
    if (ms < 50) return 'üèéÔ∏è FAST TRACK!';
    if (ms < 100) return '‚úÖ GOOD PACE!';
    return 'üìä MEASURING...';
  }
}

// Export the RAILS!
export default ChampionshipFormatter;